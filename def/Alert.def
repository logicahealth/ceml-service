Alert refers to an alert generated by the decision support system. 
Requirements for an ideal alert model: 1) The requirement is to design a 
consistent place to interlink the IDs that point to routing information 
destinations and messages. 
2) We need an attribute in Alert that indicates which group or category the
   alert belongs to. For example, the glucose protocol alert is a high level group, 
   there are specific alerts in this group, for instance, increasing insulin. 
   Do we need multiple categories for the same alert? Where should we store the category attribute in Alert? 
   Another option is to store the hierarchy in terminology. 
3) We need a consistent place to store the ID message. There are two options, either 
   in key or data in CEM. We have decided to use the CEM key to capture the unique  
   alert identifier, and it is used for finding routing information from a knowledge 
    management system. In the case of a compound alert, e.g. glucose protocol alert, GlucoseProtocolAlert_KEY_ECID is probably the alert key representation in terminology, 
   and the detailed information IncreaseInsulin_KEY_ECID will be captured in the 
   message key. In the case of a single alert, e.g. high potassium alert, the HighPotassiumAlert_KEY_ECID will be the key,   
   and the message key will be CriticallyHighPotassium_KEY_ECID. Description of process IDs in the Foresight rule engine: Use case: data comes in, and it invokes a process that 
   figures out what rules need to be run. This process has an ID stored as InvokeEventProcessId in Alert model. After the system generates one EvokeEvent Process Id, 
   the system will possibly create one to many alert events, and each has a unique ID stored in AlertEventProcessId. InvokeEventProcessId links to the rules fired to generate alerts, 
   and AlertEventProcessId captures the outcome of rule, i.e. alert information.

